// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'ChildrenData.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

ChildrenData _$ChildrenDataFromJson(Map<String, dynamic> json) => ChildrenData(
      approvedAtUtc: json['approved_at_utc'],
      subreddit: json['subreddit'] as String?,
      postBody: json['selftext'] as String?,
      authorFullname: json['author_fullname'] as String?,
      saved: json['saved'] as bool?,
      modReasonTitle: json['mod_reason_title'],
      gilded: json['gilded'] as int?,
      clicked: json['clicked'] as bool?,
      postTitle: json['title'] as String?,
      linkFlairRichtext: json['link_flair_richtext'] as List<dynamic>?,
      subredditNamePrefixed: json['subreddit_name_prefixed'] as String?,
      hidden: json['hidden'] as bool?,
      pwls: json['pwls'] as int?,
      linkFlairCssClass: json['link_flair_css_class'] as String?,
      downs: json['downs'] as int?,
      thumbnail_height: json['thumbnail_height'],
      top_awarded_type: json['top_awarded_type'],
      hide_score: json['hide_score'] as bool?,
      name: json['name'] as String?,
      quarantine: json['quarantine'] as bool?,
      link_flair_text_color: json['link_flair_text_color'] as String?,
      upvote_ratio: (json['upvote_ratio'] as num?)?.toDouble(),
      author_flair_background_color:
          json['author_flair_background_color'] as String?,
      subreddit_type: json['subreddit_type'] as String?,
      ups: json['ups'] as int?,
      total_awards_received: json['total_awards_received'] as int?,
      media_embed: json['media_embed'],
      thumbnail_width: json['thumbnail_width'],
      author_flair_template_id: json['author_flair_template_id'],
      is_original_content: json['is_original_content'] as bool?,
      user_reports: json['user_reports'] as List<dynamic>?,
      secure_media: json['secure_media'],
      is_reddit_media_domain: json['is_reddit_media_domain'] as bool?,
      is_meta: json['is_meta'] as bool?,
      category: json['category'],
      secure_media_embed: json['secure_media_embed'],
      link_flair_text: json['link_flair_text'],
      can_mod_post: json['can_mod_post'] as bool?,
      postUrl: json['url'] as String?,
    );

Map<String, dynamic> _$ChildrenDataToJson(ChildrenData instance) =>
    <String, dynamic>{
      'approved_at_utc': instance.approvedAtUtc,
      'subreddit': instance.subreddit,
      'selftext': instance.postBody,
      'author_fullname': instance.authorFullname,
      'saved': instance.saved,
      'mod_reason_title': instance.modReasonTitle,
      'gilded': instance.gilded,
      'clicked': instance.clicked,
      'title': instance.postTitle,
      'link_flair_richtext': instance.linkFlairRichtext,
      'subreddit_name_prefixed': instance.subredditNamePrefixed,
      'hidden': instance.hidden,
      'pwls': instance.pwls,
      'link_flair_css_class': instance.linkFlairCssClass,
      'downs': instance.downs,
      'thumbnail_height': instance.thumbnail_height,
      'top_awarded_type': instance.top_awarded_type,
      'hide_score': instance.hide_score,
      'name': instance.name,
      'quarantine': instance.quarantine,
      'link_flair_text_color': instance.link_flair_text_color,
      'upvote_ratio': instance.upvote_ratio,
      'author_flair_background_color': instance.author_flair_background_color,
      'subreddit_type': instance.subreddit_type,
      'ups': instance.ups,
      'total_awards_received': instance.total_awards_received,
      'media_embed': instance.media_embed,
      'thumbnail_width': instance.thumbnail_width,
      'author_flair_template_id': instance.author_flair_template_id,
      'is_original_content': instance.is_original_content,
      'user_reports': instance.user_reports,
      'secure_media': instance.secure_media,
      'is_reddit_media_domain': instance.is_reddit_media_domain,
      'is_meta': instance.is_meta,
      'category': instance.category,
      'secure_media_embed': instance.secure_media_embed,
      'link_flair_text': instance.link_flair_text,
      'can_mod_post': instance.can_mod_post,
      'url': instance.postUrl,
    };
